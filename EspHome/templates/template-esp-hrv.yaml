packages:
  common: !include common.yaml

esp32_improv:
  authorizer: none

esp32:
  board: esp32dev

globals:
  - id: dac1_level
    type: float
    initial_value: '0.0'
  - id: dac2_level
    type: float
    initial_value: '0.0'

# Enable logging
logger:

# Relays are connected trough I2C
i2c:
  sda: 4
  scl: 15
  scan: True

pcf8574:
  - id: 'pcf8574_hub'
    address: 0x24
    pcf8575: False

switch:
  - platform: gpio
    name: "${name} relé 1"
    pin:
      pcf8574: pcf8574_hub
      number: 0
      mode:
        output: true
      inverted: false

  - platform: gpio
    name: "${name} relé 2"
    pin:
      pcf8574: pcf8574_hub
      number: 1
      mode:
        output: true
      inverted: false

  - platform: gpio
    name: "${name} relé 3"
    pin:
      pcf8574: pcf8574_hub
      number: 2
      mode:
        output: true
      inverted: false

  - platform: gpio
    name: "${name} relé 4"
    pin:
      pcf8574: pcf8574_hub
      number: 3
      mode:
        output: true
      inverted: false

  - platform: gpio
    name: "${name} relé 5"
    pin:
      pcf8574: pcf8574_hub
      number: 4
      mode:
        output: true
      inverted: false

  - platform: gpio
    name: "${name} relé 6"
    pin:
      pcf8574: pcf8574_hub
      number: 5
      mode:
        output: true
      inverted: false

binary_sensor:
  - platform: gpio
    name: "input1"
    pin:
      number: 36
      inverted: true

  - platform: gpio
    name: "input2"
    pin:
      number: 39
      inverted: true

  - platform: gpio
    name: "input3"
    pin:
      number: 27
      inverted: true

  - platform: gpio
    name: "input4"
    pin:
      number: 14
      inverted: true

number:
  - platform: template
    entity_category: 'config'
    icon: mdi:fan-plus
    name: "disbalance ventilátoru"
    id: fan_disbalance
    unit_of_measurement: "%"
    min_value: -100
    max_value: 100
    step: 10
    initial_value: 0.0
    restore_value: true
    mode: slider
    optimistic: true
    on_value:
      then:
        - lambda: |-
            if (id(hrv_fun).state) {
              id(hrv_fun).turn_on().set_speed(id(hrv_fun).speed).perform();
            }

output:
  # Hardware outputs
  - platform: esp32_dac
    pin: GPIO25
    id: dac1_hw

  - platform: esp32_dac
    pin: GPIO26
    id: dac2_hw

  # Hardware outputs with output memory
  - platform: template
    id: dac1
    type: float
    write_action:
      - globals.set:
          id: dac1_level
          value: !lambda 'return state;'
      - output.set_level:
          id: dac1_hw
          level: !lambda 'return state;'

  - platform: template
    id: dac2
    type: float
    write_action:
      - globals.set:
          id: dac2_level
          value: !lambda 'return state;'
      - output.set_level:
          id: dac2_hw
          level: !lambda 'return state;'

  # Common output for the fan
  - platform: template
    id: dual_fan_output
    type: float
    write_action:
      - lambda: |-
          float disbalance_value = id(fan_disbalance).state / 100.0;
          float intake_level;
          float exhaust_level;

          if (disbalance_value > 0) {
              intake_level = state * (1.0 - disbalance_value);
              exhaust_level = state;
          } else {
              intake_level = state;
              exhaust_level = state * (1.0 + disbalance_value);
          }

          id(dac1).set_level(intake_level);
          id(dac2).set_level(exhaust_level);

          ESP_LOGD("custom", "Nastavuji dac1 (přívod) na hodnotu: %f", intake_level);
          ESP_LOGD("custom", "Nastavuji dac2 (odtah) na hodnotu: %f", exhaust_level);

fan:
  - platform: speed
    speed_count: 100
    output: dual_fan_output
    name: "Ventilátor"
    id: hrv_fun
    restore_mode: RESTORE_DEFAULT_ON
    preset_modes:
      - "AUTO"
      - "MANUAL"
      - "BOOST"

sensor:
  - platform: template
    icon: mdi:fan
    name: "Ventilátor přívod vzduchu"
    unit_of_measurement: "%"
    accuracy_decimals: 0
    lambda: |-
      return id(dac1_level) * 100.0;
    update_interval: 1s

  - platform: template
    icon: mdi:fan
    name: "Ventilátor odvod vzduchu"
    unit_of_measurement: "%"
    accuracy_decimals: 0
    lambda: |-
      return id(dac2_level) * 100.0;
    update_interval: 1s
  
  - platform: template
    icon: mdi:air-filter
    name: "Průtok vzduchu"
    id: dac2_sensor
    unit_of_measurement: "m3/h"
    accuracy_decimals: 0
    lambda: |-
      return ${max_airflow}*(id(hrv_fun).speed)/100;
    update_interval: 1s