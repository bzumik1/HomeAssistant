packages:
  common: !include common.yaml

esp32_improv:
  authorizer: none

# Basic Config
esphome:
  platform: ESP32
  board: esp32dev
  name: ${name}

# Enable logging
logger:

# Relays are connected trough I2C
i2c:
  sda: 4
  scl: 15
  scan: True

pcf8574:
  - id: 'pcf8574_hub'
    address: 0x24
    pcf8575: False

switch:
  - platform: gpio
    name: "${name} relé 1"
    pin:
      pcf8574: pcf8574_hub
      number: 0
      mode:
        output: true
      inverted: false

  - platform: gpio
    name: "${name} relé 2"
    pin:
      pcf8574: pcf8574_hub
      number: 1
      mode:
        output: true
      inverted: false

  - platform: gpio
    name: "${name} relé 3"
    pin:
      pcf8574: pcf8574_hub
      number: 2
      mode:
        output: true
      inverted: false

  - platform: gpio
    name: "${name} relé 4"
    pin:
      pcf8574: pcf8574_hub
      number: 3
      mode:
        output: true
      inverted: false

  - platform: gpio
    name: "${name} relé 5"
    pin:
      pcf8574: pcf8574_hub
      number: 4
      mode:
        output: true
      inverted: false

  - platform: gpio
    name: "${name} relé 6"
    pin:
      pcf8574: pcf8574_hub
      number: 5
      mode:
        output: true
      inverted: false

binary_sensor:
  - platform: gpio
    name: "input1"
    pin:
      number: 36
      inverted: true

  - platform: gpio
    name: "input2"
    pin:
      number: 39
      inverted: true

  - platform: gpio
    name: "input3"
    pin:
      number: 27
      inverted: true

  - platform: gpio
    name: "input4"
    pin:
      number: 14
      inverted: true

number:
  - platform: template
    name: "${name} disbalance ventilátoru"
    id: fan_disbalance
    min_value: -100
    max_value: 100
    step: 1.0
    initial_value: 0.0
    restore_value: true
    mode: slider
    optimistic: true
    on_value:
      then:
        - lambda: |-
            if (id(hrv_fun).state) {
              id(hrv_fun).turn_on().set_speed(id(hrv_fun).speed).perform();
            }

output:
  - platform: esp32_dac
    pin: GPIO25
    id: dac1

  - platform: esp32_dac
    pin: GPIO26
    id: dac2

  - platform: template
    id: dual_fan_output
    type: float
    write_action:
      - lambda: |-
          float disbalance_value = id(fan_disbalance).state / 100.0;
          float intake_level = state * (1.0 - disbalance_value);
          float exhaust_level = state * (1.0 + disbalance_value);
          id(dac1).set_level(intake_level);
          id(dac2).set_level(exhaust_level);
          ESP_LOGD("custom", "Nastavuji dac1 (přívod) na hodnotu: %f", intake_level);
          ESP_LOGD("custom", "Nastavuji dac2 (odtah) na hodnotu: %f", exhaust_level);

fan:
  - platform: speed
    speed_count: 100
    output: dual_fan_output
    name: "${name} ventilátor "
    id: hrv_fun
    restore_mode: RESTORE_DEFAULT_ON
    preset_modes:
      - "AUTO"
      - "MANUAL"
      - "BOOST"
    on_preset_set:
      then:
        - lambda: |-
            if (id(hrv_fun).preset_mode == "BOOST") {
              id(hrv_fun).turn_on().set_speed(1.0).perform();  // Zapněte ventilátor na plný výkon
              ESPHome::Scheduler::shared_instance().set_timeout(15 * 60 * 1000, []() {
                id(hrv_fun).turn_off().perform();  // Vypněte ventilátor
              });
            }