substitutions:
  measurement_interval: 1s

packages:
  common: !include common.yaml

esp32_improv:
  authorizer: none
  wifi_timeout: 5min

esp32:
  board: esp32doit-devkit-v1
  framework:
    type: arduino

i2c:
  sda: GPIO26
  scl: GPIO25

output:
  - platform: gpio
    pin: GPIO13
    id: relay1
  - platform: gpio
    pin: GPIO12
    id: relay2

switch:
  - platform: template
    name: "nezávislý režim vypínač 1"
    icon: mdi:toggle-switch-outline
    id: detached_mode_switch_1
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: CONFIG

  - platform: template
    name: "nezávislý režim vypínač 2"
    icon: mdi:toggle-switch-outline
    id: detached_mode_switch_2
    optimistic: true
    restore_mode: RESTORE_DEFAULT_ON
    entity_category: CONFIG

  - platform: output
    name: "relé 1"
    icon: mdi:toggle-switch-variant
    restore_mode: RESTORE_DEFAULT_ON
    output: relay1
    id: switch_relay1
  
  - platform: output
    name: "relé 2"
    icon: mdi:toggle-switch-variant
    restore_mode: RESTORE_DEFAULT_ON
    output: relay2
    id: switch_relay2

status_led:
  pin:
    number: GPIO0
    inverted: true

binary_sensor:

  # Wired switch 1
  - platform: gpio
    name: "vypínač 1"
    icon: mdi:light-switch
    id: the_switch_1
    pin:
      number: GPIO5
    filters:
      - delayed_on_off: 50ms
    on_multi_click:
      # Single press
      - timing:
          - ON for at most 400ms
          - OFF for at least 210ms
        then:
          - if:
              condition:
                and:
                  - wifi.connected:
                  - api.connected:
                  - switch.is_on: detached_mode_switch_1
                  - switch.is_on: switch_relay1
              then:
                - homeassistant.event:
                    event: esphome.${name}_switch1_single_press
              else:
                - switch.toggle: switch_relay1
                
      # Double press
      - timing:
        - ON for at most 400ms
        - OFF for at most 200ms
        - ON for at most 400ms
        - OFF for at least 200ms
        then:
          - homeassistant.event:
              event: esphome.${name}_switch1_double_press
      # Long press
      - timing:
        - ON for at least 500ms
        then:
          - homeassistant.event:
              event: esphome.${name}_switch1_long_press
      # Relay toggle
      - timing:
          - ON for at least 1500ms
        then:
          - switch.toggle: switch_relay1

  # Wired switch 2
  - platform: gpio
    name: "vypínač 2"
    icon: mdi:light-switch
    id: the_switch_2
    pin:
      number: GPIO18
    filters:
      - delayed_on_off: 50ms
    on_multi_click:
      # Single press
      - timing:
          - ON for at most 400ms
          - OFF for at least 210ms
        then:
          - if:
              condition:
                and:
                  - wifi.connected:
                  - api.connected:
                  - switch.is_on: detached_mode_switch_2
                  - switch.is_on: switch_relay2
              then:
                - homeassistant.event:
                    event: esphome.${name}_switch2_single_press
              else:
                - switch.toggle: switch_relay2

      # Double press
      - timing:
        - ON for at most 400ms
        - OFF for at most 200ms
        - ON for at most 400ms
        - OFF for at least 200ms
        then:
          - homeassistant.event:
              event: esphome.${name}_switch2_double_press
      # Long press
      - timing:
        - ON for at least 500ms
        then:
          - homeassistant.event:
              event: esphome.${name}_switch2_long_press
      # Relay toggle
      - timing:
          - ON for at least 1500ms
        then:
          - switch.toggle: switch_relay2

  # Button on mini switch
  - platform: gpio
    name: "tlačítko"
    icon: mdi:gesture-tap-button
    pin:
      number: GPIO4
      inverted: yes
      mode:
        input: true
        pullup: true
    filters:
      - delayed_on: 50ms
    on_multi_click:
      - timing:
          - ON for at most 1s
          - OFF for at least 0.2s
        then:
          - switch.toggle: switch_relay1
          - switch.toggle: switch_relay2

sensor:
  #power monitoring
  - platform: ade7953_i2c
    irq_pin: GPIO27 # Prevent overheating by setting this
    voltage:
      name: "napětí"
    # On the Shelly 2.5 channels are mixed ch1=B ch2=A
    current_a:
      name: "proud 1"
      id: current_1
    current_b:
      name: "proud 2"
      id: current_2
    active_power_a:
      name: "výkon 1"
      id: active_power_1
      # active_power_a is inverted, so multiply by -1
      filters:
        - multiply: -1
      on_value_range:
        - above: ${max_power}
          then:
            - switch.turn_off: switch_relay2
            - homeassistant.service:
                service: persistent_notification.create
                data:
                  title: "Zpráva od ${friendly_name}"
                data_template:
                  message: "Vypánám relé 2 kvůli tomu, že bylo dosaženo maximálního výkonu ${max_power}W"
    active_power_b:
      name: "výkon 2"
      id: active_power_2
      # active_power_b is inverted, so multiply by -1
      filters:
        - multiply: -1
      on_value_range:
        - above: ${max_power}
          then:
            - switch.turn_off: switch_relay1
            - homeassistant.service:
                service: persistent_notification.create
                data:
                  title: "Zpráva od ${friendly_name}"
                data_template:
                  message: "Vypánám relé 1 kvůli tomu, že bylo dosaženo maximálního výkonu ${max_power}W"
    update_interval: ${measurement_interval}

  - platform: template
    name: "proud celkem"
    icon: mdi:current-ac
    unit_of_measurement: "A"
    lambda: |-
      return id(current_1).state + id(current_2).state;
    update_interval: ${measurement_interval}

  - platform: template
    name: "výkon celkem"
    icon: mdi:lightning-bolt
    unit_of_measurement: "W"
    lambda: |-
      return id(active_power_1).state + id(active_power_2).state;
    update_interval: ${measurement_interval}

  - platform: total_daily_energy
    name: "spotřeba 1"
    icon: mdi:counter
    id: total_daily_energy_1
    power_id: active_power_1
  
  - platform: total_daily_energy
    name: "spotřeba 2"
    icon: mdi:counter
    id: total_daily_energy_2
    power_id: active_power_2

  - platform: template
    name: "spotřeba celkem"
    icon: mdi:counter
    unit_of_measurement: "Wh"
    lambda: |-
      return id(total_daily_energy_1).state + id(total_daily_energy_2).state;
    update_interval: ${measurement_interval}

    #temperature sensor
  - platform: ntc
    sensor: temp_resistance_reading
    name: "teplota"
    unit_of_measurement: "°C"
    accuracy_decimals: 1
    icon: "mdi:thermometer"
    entity_category: 'diagnostic'
    calibration:
      #These default values don't seem accurate
      b_constant: 3350
      reference_resistance: 10kOhm
      reference_temperature: 298.15K
    on_value_range:
      - above: ${max_temp}
        then:
          - switch.turn_off: switch_relay1
          - switch.turn_off: switch_relay2
          - homeassistant.service:
                service: persistent_notification.create
                data:
                  title: "Zpráva od ${friendly_name}"
                data_template:
                  message: "Vypánám relé 1 a relé 2 kvůli tomu, že bylo dosaženo maximální teploty zařízení ${max_temp}°C"

  - platform: resistance
    id: temp_resistance_reading
    sensor: temp_analog_reading
    configuration: DOWNSTREAM
    resistor: 10kOhm

  - platform: adc
    id: temp_analog_reading
    pin: GPIO35
    attenuation: 11db
    update_interval: 60s

time:
  - platform: sntp
    id: my_time